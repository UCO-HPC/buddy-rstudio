#!/usr/bin/env bash

#
# Start RStudio Server
#

# Purge the environment to avoid conflicts
module purge

# Load requested version
module load <%= context.version %>

# Load additional modules, if any
<%- unless context.modules.blank? -%>
# Load the requested modules
module load <%= context.modules %>

# List loaded modules
module list
<%- end -%>

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

# Give rstudio the right username
export RSTUDIO_USER="$(whoami)"

# Generate the database config
export RSTUDIO_DB_CONFIG="${PWD}/database.conf"
(
umask 077
sed 's/^ \{2\}//' > "${RSTUDIO_DB_CONFIG}" << EOL  
  provider=sqlite
  directory=$HOME/.local/share/rstudio
EOL
)

# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"

  exec &>>"\${RSESSION_LOG_FILE}"

  export CPATH="$CPATH"
  export LIBRARY_PATH="$LIBRARY_PATH"
  export LD_LIBRARY_PATH="$LD_LIBRARY_PATH"  

  ##  export RMPI_TYPE=OPENMPI


  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Set working directory to home directory
cd "${HOME}"

export TMPDIR="$(mktemp -d)"

mkdir -p "$TMPDIR/rstudio-server"
python -c 'from uuid import uuid4; print(uuid4())' > "$TMPDIR/rstudio-server/secure-cookie-key"
chmod 0600 "$TMPDIR/rstudio-server/secure-cookie-key"

set -x
# Launch the RStudio Server
echo "Starting up rserver..."

## - [ "RStudio 1.3.959 (R 4.0.0/FOSS 2020a/GCC 9.3.0)", "rstudio-singularity/1.4.1106" ] 
## - [ "RStudio 2022.07.1+554 (R 4.2.1/FOSS 2022a/GCC 11.3.0)", "rstudio-singularity/2022.07.1-554" ] 

<%- if context.version == "rstudio-singularity/2022.07.1-554" -%>

  singularity -v run -B "$TMPDIR:/tmp" "$RSTUDIO_SERVER_IMAGE" \
   --www-port "${port}" \
   --auth-none 0 \
   --auth-pam-helper-path "${RSTUDIO_AUTH}" \
   --auth-encrypt-password 0 \
   --database-config-file "${RSTUDIO_DB_CONFIG}" \
   --rsession-path "${RSESSION_WRAPPER_FILE}" \
   --server-data-dir "${TMPDIR}" \
   --server-user "${RSTUDIO_USER}" \

  <%- else -%>

  singularity run -B "$TMPDIR:/tmp" "$RSTUDIO_SERVER_IMAGE" \
    --www-port "${port}" \
    --auth-none 0 \
    --auth-pam-helper-path "${RSTUDIO_AUTH}" \
    --auth-encrypt-password 0 \
    --rsession-path "${RSESSION_WRAPPER_FILE}" \
    --server-data-dir "${TMPDIR}" \
    --secure-cookie-key-file "${TMPDIR}/rstudio-server/secure-cookie-key"

<%- end -%>

echo 'Singularity has exited...'
echo 'If RStudio fails to start, and singularity exits without error, please review ~/.local/share/rstudio/log/rstudio.log'
